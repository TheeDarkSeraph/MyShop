
@if (FeaturedProducts.Count > 0) {
    <div class="container-fluid">
        <div class="row">
            <div class="card border-success shadow card-container mb-2 mt-2">
                <SfCarousel ButtonsVisibility="CarouselButtonVisibility. VisibleOnHover" AnimationEffect="CarouselAnimationEffect.Slide" AutoPlay="true" ShowIndicators="true" >
                    <ChildContent>
                    @foreach (var itemDictionary in RecommendCarouslGroupProducts){
                        <CarouselItem>
                            <figure>
                                <div class="row">
                                @foreach (var product in itemDictionary. Value){
                                    <div class="col-lg-2 card-container-display">
                                        <div class="card border-success shadow">
                                            <div class="card-body d-flex justify-content-between">
                                                <img src="@product.Base64Img" width="100" height="150" class="d-flex justify-content-center" 
                                                    style="margin-right:5px; cursor:pointer" @onclick="()=>ViewProduct(product)" />
                                                <div class="vstack gap-1">
                                                    <h5>@product.Name</h5>
                                                    <h6>@(General.GetDescription(product.Description!))</h6>
                                                    <h6 class="text-danger">@product.Price</h6>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                </div>
                            </figure>
                        </CarouselItem>
                    }
                    </ChildContent>
                    <PreviousButtonTemplate>
                        <img src="../Resources/lessthan.png" width="50" height="50" class="styleCursor" />
                    </PreviousButtonTemplate>
                    <NextButtonTemplate>
                        <img src="../Resources/greaterthan.png" width="50" height="50" class="styleCursor" />
                    </NextButtonTemplate>
                    <IndicatorsTemplate>
                        <div class="indicator"></div>
                    </IndicatorsTemplate>
                </SfCarousel>
            </div>
        </div>
    </div>

}




@code {
    List<Product> FeaturedProducts { get; set; } = new();
    protected async override Task OnInitializedAsync(){
        FeaturedProducts = await productService.GetProducts(false);
        Populate();
    }
    
    void ViewProduct(Product product) {
        navManager.NavigateTo($"/products/{product.Id}");
    }
    Dictionary<int, List<Product>> RecommendCarouslGroupProducts = new();
    void Populate(){
        int itemPerView = 6;
        int totalProducts = FeaturedProducts.Count;
        int numberOfGroups = (int) MathF.Ceiling((float)totalProducts / itemPerView);
        int startNumber = 1;
        int skip = 0;
        if (numberOfGroups <= 0) return;
        while (startNumber <= numberOfGroups){
            var products = FeaturedProducts.Skip(skip).Take(itemPerView).ToList();
            RecommendCarouslGroupProducts.Add(startNumber, products);
            skip += itemPerView;
            startNumber++;
        }
    }
}
