@page "/shopping/cart/my-cart"
@if (cartService.IsCartLoaderVisible) {
    @* <LoadingPage /> *@
    <div>Loading...</div>
}else{

    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-3">
                <div class="card">
                    <div class="card-header">
                        Cart Summary
                    </div>
                    <div class="card-body p-5">
                        <span>
                            <sub style="font-size:30px; font-family:Impact">$</sub>
                            <sup style="font-family:MyFont; font-size:20px; ">@MyCartOrders.Sum(_ => _.SubTotal).ToString("#.##") </sup>
                        </span>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-lg btn-danger">
                            <i class="fa fa-cart-arrow-down"></i>
                            Proceed to Checkout
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-lg-9"> 
                <BannerPage />
                <div class="card">
                    <div class="card-header">Cart Details</div>
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">Image</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">SubTotal</th>
                                    <th scope="col">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if(MyCartOrders.Count > 0){
                                    var listData = MyCartOrders.Skip(SkipValue).Take(TakeValue).ToList();
                                    int count = 1;
                                    foreach (var item in listData){
                                        <tr>
                                            <td>@count</td>
                                            <td><img src="@item.Image" width="100" height="150" /> </td>
                                            <td>@item.Name</td>
                                            <td>@item.Price</td>
                                            <td> 
                                                <input type="number" min="1" class="form-control w-25" value="@item.Amount" @onchange="@(e => HandleChange(e, item))" />
                                            </td>
                                            <td>@item.SubTotal</td>
                                            <td>
                                                <a id="changeCursor" @onclick="async ()=> await DeleteCart(item)">
                                                <i class="fa fa-trash text-danger"></i>
                                                </a>
                                            </td>
                                        </tr>
                                        count++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>


            <div class="card-footer">
                <div class="d-flex justify-content-center">
                <SfPager @ref="@Page" PageSize=3 NumericItemsCount=4 TotalItemsCount=MyCartOrders!.Count ItemClick="Click"> </SfPager>
                </div>
            </div>
            <RecommendedPage />
        </div>
    </div>
}

<style>
    #changeCursor{
        cursor:pointer;
    }
</style>

<MessageDialog @ref="messageDialog"></MessageDialog>
@code {
    MessageDialog? messageDialog;
    SfPager? Page;
    public int SkipValue;
    public int TakeValue = 3;
    List<Order> MyCartOrders = new();
    protected override async Task OnInitializedAsync(){
        MyCartOrders = await cartService.MyOrders();
    }

    async Task HandleChange(Microsoft.AspNetCore.Components.ChangeEventArgs e, Order order) {
        try {
            if (int.Parse(e.Value!.ToString()!) <= 0 || e.Value.ToString()!.Equals("") || string.IsNullOrWhiteSpace(e.Value.ToString())) return;
            var getOrder = MyCartOrders.FirstOrDefault(_ => _.Id == order.Id);
            getOrder!.Amount = int.Parse(e.Value!.ToString()!);

            //Update quantity
            DisplayResponse(await cartService.AddToCart(new Product() { Id = order.Id }, getOrder.Amount));

        } catch (Exception){ }
    }
    private void DisplayResponse(ServiceResponse serviceResponse) {
        messageDialog!.SetDialogValues(serviceResponse.IsSuccess ? "success" : "danger", serviceResponse.Message!);
        messageDialog!.ShowMessage();
    }
    public void Click(PagerItemClickEventArgs args) {
        SkipValue = (args.CurrentPage * Page!.PageSize) - Page.PageSize;
        TakeValue = Page.PageSize;
    }
    public async Task DeleteCart(Order order) {
        bool confirm = await jsruntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this item?");
        if (!confirm) return;
        MyCartOrders.Remove(MyCartOrders.FirstOrDefault(_=>_.Id == order.Id)!);
        DisplayResponse(await cartService.DeleteCart(order));
    }
}
